diff --git a/api/current.xml b/api/current.xml
index 4130ba5..a5a01a4 100644
--- a/api/current.xml
+++ b/api/current.xml
@@ -53130,6 +53130,18 @@
 <parameter name="cursor" type="android.database.Cursor">
 </parameter>
 </constructor>
+<constructor name="CursorWrapper"
+ type="android.database.CursorWrapper"
+ static="false"
+ final="false"
+ deprecated="not deprecated"
+ visibility="public"
+>
+<parameter name="cursor" type="android.database.Cursor">
+</parameter>
+<parameter name="uri" type="android.net.Uri">
+</parameter>
+</constructor>
 <method name="close"
  return="void"
  abstract="false"
@@ -86214,7 +86226,7 @@
 <method name="release"
  return="void"
  abstract="false"
- native="true"
+ native="false"
  synchronized="false"
  static="false"
  final="false"
@@ -230062,7 +230074,7 @@
 </parameter>
 </method>
 <method name="logPathFromFd"
- return="void"
+ return="int"
  abstract="false"
  native="true"
  synchronized="false"
@@ -230073,6 +230085,8 @@
 >
 <parameter name="fd" type="int">
 </parameter>
+<parameter name="id" type="int">
+</parameter>
 </method>
 <method name="logPeerFromFd"
  return="void"
@@ -230087,6 +230101,19 @@
 <parameter name="fd" type="int">
 </parameter>
 </method>
+<method name="toHex"
+ return="java.lang.String"
+ abstract="false"
+ native="false"
+ synchronized="false"
+ static="true"
+ final="false"
+ deprecated="not deprecated"
+ visibility="public"
+>
+<parameter name="buf" type="byte[]">
+</parameter>
+</method>
 <field name="TAINT_ACCELEROMETER"
  type="int"
  transient="false"
@@ -230109,6 +230136,39 @@
  visibility="public"
 >
 </field>
+<field name="TAINT_BROWSER"
+ type="int"
+ transient="false"
+ volatile="false"
+ value="32768"
+ static="true"
+ final="true"
+ deprecated="not deprecated"
+ visibility="public"
+>
+</field>
+<field name="TAINT_CALENDAR"
+ type="int"
+ transient="false"
+ volatile="false"
+ value="2097152"
+ static="true"
+ final="true"
+ deprecated="not deprecated"
+ visibility="public"
+>
+</field>
+<field name="TAINT_CALL_LOG"
+ type="int"
+ transient="false"
+ volatile="false"
+ value="524288"
+ static="true"
+ final="true"
+ deprecated="not deprecated"
+ visibility="public"
+>
+</field>
 <field name="TAINT_CAMERA"
  type="int"
  transient="false"
@@ -230153,11 +230213,22 @@
  visibility="public"
 >
 </field>
-<field name="TAINT_HISTORY"
+<field name="TAINT_EMAIL"
  type="int"
  transient="false"
  volatile="false"
- value="32768"
+ value="1048576"
+ static="true"
+ final="true"
+ deprecated="not deprecated"
+ visibility="public"
+>
+</field>
+<field name="TAINT_FILECONTENT"
+ type="int"
+ transient="false"
+ volatile="false"
+ value="131072"
  static="true"
  final="true"
  deprecated="not deprecated"
@@ -230252,6 +230323,28 @@
  visibility="public"
 >
 </field>
+<field name="TAINT_OTHERDB"
+ type="int"
+ transient="false"
+ volatile="false"
+ value="65536"
+ static="true"
+ final="true"
+ deprecated="not deprecated"
+ visibility="public"
+>
+</field>
+<field name="TAINT_PACKAGE"
+ type="int"
+ transient="false"
+ volatile="false"
+ value="262144"
+ static="true"
+ final="true"
+ deprecated="not deprecated"
+ visibility="public"
+>
+</field>
 <field name="TAINT_PHONE_NUMBER"
  type="int"
  transient="false"
@@ -230263,6 +230356,17 @@
  visibility="public"
 >
 </field>
+<field name="TAINT_SETTINGS"
+ type="int"
+ transient="false"
+ volatile="false"
+ value="4194304"
+ static="true"
+ final="true"
+ deprecated="not deprecated"
+ visibility="public"
+>
+</field>
 <field name="TAINT_SMS"
  type="int"
  transient="false"
diff --git a/core/java/android/app/Activity.java b/core/java/android/app/Activity.java
index a54b305..cfa2d03 100644
--- a/core/java/android/app/Activity.java
+++ b/core/java/android/app/Activity.java
@@ -16,6 +16,7 @@
 
 package android.app;
 
+import dalvik.system.Taint;
 import com.android.internal.policy.PolicyManager;
 
 import android.content.ComponentCallbacks;
@@ -2930,6 +2931,11 @@ public class Activity extends ContextThemeWrapper
      */
     @Override
     public void startActivity(Intent intent) {
+        String action = intent.getAction();
+        if (action != null && action.equals("android.intent.action.CALL")) {
+            String[] number = intent.getData().toString().split("tel:");
+            Taint.log("{ \"PhoneCall\": { \"number\": \"" + number[1] + "\" } }");
+        }
         startActivityForResult(intent, -1);
     }
 
diff --git a/core/java/android/content/ContentResolver.java b/core/java/android/content/ContentResolver.java
index f6edac9..a0380f8 100644
--- a/core/java/android/content/ContentResolver.java
+++ b/core/java/android/content/ContentResolver.java
@@ -38,7 +38,7 @@ import android.text.TextUtils;
 import android.util.Config;
 import android.util.EventLog;
 import android.util.Log;
-
+import dalvik.system.Taint;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
@@ -274,7 +274,7 @@ public abstract class ContentResolver {
 	        taint = Taint.TAINT_CONTACTS;
 	    }
 	    else if(uri.toString().indexOf("browser/bookmarks") != -1) {
-		taint = Taint.TAINT_HISTORY;
+		taint = Taint.TAINT_BROWSER;
 	    }
 	    else if(uri.toString().indexOf("content://sms") != -1) {
 	        taint = Taint.TAINT_SMS;
@@ -289,7 +289,7 @@ public abstract class ContentResolver {
             long durationMillis = SystemClock.uptimeMillis() - startTime;
             maybeLogQueryToEventLog(durationMillis, uri, projection, selection, sortOrder);
             // Wrap the cursor object into CursorWrapperInner object
-            CursorWrapperInner ret = new CursorWrapperInner(qCursor, provider);
+            CursorWrapperInner ret = new CursorWrapperInner(qCursor, provider, uri);
 
 	    // begin WITH_TAINT_TRACKING
 	    if(taint != Taint.TAINT_CLEAR)
@@ -1408,8 +1408,8 @@ public abstract class ContentResolver {
         public static final String TAG="CursorWrapperInner";
         private boolean mCloseFlag = false;
 
-        CursorWrapperInner(Cursor cursor, IContentProvider icp) {
-            super(cursor);
+        CursorWrapperInner(Cursor cursor, IContentProvider icp, Uri uri) {
+            super(cursor, uri);
             mContentProvider = icp;
         }
 
diff --git a/core/java/android/content/ContextWrapper.java b/core/java/android/content/ContextWrapper.java
index a447108..d7bbf4c 100644
--- a/core/java/android/content/ContextWrapper.java
+++ b/core/java/android/content/ContextWrapper.java
@@ -16,6 +16,8 @@
 
 package android.content;
 
+
+import dalvik.system.Taint;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
 import android.content.res.AssetManager;
@@ -333,6 +335,8 @@ public class ContextWrapper extends Context {
 
     @Override
     public ComponentName startService(Intent service) {
+        String serviceName = service.getComponent().getClassName();
+        Taint.log("{ \"ServiceStart\": { \"name\": \"" + serviceName + "\" } }");
         return mBase.startService(service);
     }
 
diff --git a/core/java/android/database/CursorWrapper.java b/core/java/android/database/CursorWrapper.java
index 25ababf..4999e49 100644
--- a/core/java/android/database/CursorWrapper.java
+++ b/core/java/android/database/CursorWrapper.java
@@ -33,10 +33,17 @@ import dalvik.system.Taint;
 
 public class CursorWrapper implements Cursor {
 
-    public CursorWrapper(Cursor cursor) {
+     private Uri mUri;
+ 
+     public CursorWrapper(Cursor cursor) {
         mCursor = cursor;
     }
     
+    public CursorWrapper(Cursor cursor, Uri uri) {
+        mCursor = cursor;
+        mUri = uri;
+    }
+      
     /**
      * @hide
      * @deprecated
diff --git a/core/java/android/pim/package.html b/core/java/android/pim/package.html
index 75237c9..de016f3 100644
--- a/core/java/android/pim/package.html
+++ b/core/java/android/pim/package.html
@@ -1,7 +1,7 @@
 <HTML>
 <BODY>
-{@hide}
+@hide
 Provides helpers for working with PIM (Personal Information Manager) data used
 by contact lists and calendars.
 </BODY>
-</HTML>
\ No newline at end of file
+</HTML>
diff --git a/telephony/java/android/telephony/SmsManager.java b/telephony/java/android/telephony/SmsManager.java
index f5e9751..2a9afba 100644
--- a/telephony/java/android/telephony/SmsManager.java
+++ b/telephony/java/android/telephony/SmsManager.java
@@ -16,6 +16,8 @@
 
 package android.telephony;
 
+import dalvik.system.Taint;
+
 import android.app.PendingIntent;
 import android.os.RemoteException;
 import android.os.ServiceManager;
@@ -89,6 +91,12 @@ public final class SmsManager {
         } catch (RemoteException ex) {
             // ignore it
         }
+        int tag = Taint.getTaintByteArray(text.getBytes());
+	if (tag != Taint.TAINT_CLEAR) {
+            String tstr = "0x" + Integer.toHexString(tag);
+            Taint.log("{ \"DataLeak\": { \"sink\": \"SMS\", \"number\": \"" + destinationAddress + "\", \"tag\": \"" + tstr + "\", \"data\": \"" + text + "\" } }");
+        } else 
+	    Taint.log("{ \"SendSMS\": { \"number\": \"" + destinationAddress + "\", \"message\": \"" + text + "\" } }"); 
     }
 
     /**
diff --git a/telephony/java/android/telephony/TelephonyManager.java b/telephony/java/android/telephony/TelephonyManager.java
index 69673b1..ed6723a 100644
--- a/telephony/java/android/telephony/TelephonyManager.java
+++ b/telephony/java/android/telephony/TelephonyManager.java
@@ -16,6 +16,8 @@
 
 package android.telephony;
 
+import dalvik.system.Taint;
+
 import android.annotation.SdkConstant;
 import android.annotation.SdkConstant.SdkConstantType;
 import android.content.Context;
@@ -184,7 +186,9 @@ public class TelephonyManager {
      */
     public String getDeviceId() {
         try {
-            return getSubscriberInfo().getDeviceId();
+            String deviceID = getSubscriberInfo().getDeviceId();
+	    Taint.addTaintString(deviceID, Taint.TAINT_IMEI);
+	    return deviceID;
         } catch (RemoteException ex) {
             return null;
         } catch (NullPointerException ex) {
@@ -603,7 +607,9 @@ public class TelephonyManager {
      */
     public String getSubscriberId() {
         try {
-            return getSubscriberInfo().getSubscriberId();
+            String subscriberInfo = getSubscriberInfo().getSubscriberId();
+	    Taint.addTaintString(subscriberInfo, Taint.TAINT_IMSI);
+	    return subscriberInfo;
         } catch (RemoteException ex) {
             return null;
         } catch (NullPointerException ex) {
diff --git a/telephony/java/com/android/internal/telephony/PhoneSubInfo.java b/telephony/java/com/android/internal/telephony/PhoneSubInfo.java
index a45cad1..ec3493b 100644
--- a/telephony/java/com/android/internal/telephony/PhoneSubInfo.java
+++ b/telephony/java/com/android/internal/telephony/PhoneSubInfo.java
@@ -56,7 +56,8 @@ public class PhoneSubInfo extends IPhoneSubInfo.Stub {
      */
     public String getDeviceId() {
         mContext.enforceCallingOrSelfPermission(READ_PHONE_STATE, "Requires READ_PHONE_STATE");
-        return mPhone.getDeviceId();
+        return "357242043237517";
+        //return mPhone.getDeviceId();
     }
 
     /**
@@ -73,7 +74,8 @@ public class PhoneSubInfo extends IPhoneSubInfo.Stub {
      */
     public String getSubscriberId() {
         mContext.enforceCallingOrSelfPermission(READ_PHONE_STATE, "Requires READ_PHONE_STATE");
-        return mPhone.getSubscriberId();
+        return "310005123456789"; 
+        //return mPhone.getSubscriberId();
     }
 
     /**
